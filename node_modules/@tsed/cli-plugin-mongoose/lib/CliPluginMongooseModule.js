"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CliPluginMongooseModule = void 0;
const tslib_1 = require("tslib");
const cli_core_1 = require("@tsed/cli-core");
const di_1 = require("@tsed/di");
const MongooseGenerateHook_1 = require("./hooks/MongooseGenerateHook");
const MongooseInitHook_1 = require("./hooks/MongooseInitHook");
const CliMongoose_1 = require("./services/CliMongoose");
let CliPluginMongooseModule = class CliPluginMongooseModule {
    install() {
        this.packageJson.addDependencies({
            "@tsed/mongoose": this.packageJson.dependencies["@tsed/common"],
            mongoose: "latest"
        });
        this.packageJson.addDevDependencies({
            "@tsed/testing-mongoose": this.packageJson.dependencies["@tsed/common"]
        });
    }
};
tslib_1.__decorate([
    di_1.Inject(),
    tslib_1.__metadata("design:type", cli_core_1.ProjectPackageJson)
], CliPluginMongooseModule.prototype, "packageJson", void 0);
tslib_1.__decorate([
    cli_core_1.OnAdd("@tsed/cli-plugin-mongoose"),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", void 0)
], CliPluginMongooseModule.prototype, "install", null);
CliPluginMongooseModule = tslib_1.__decorate([
    cli_core_1.Module({
        imports: [MongooseInitHook_1.MongooseInitHook, MongooseGenerateHook_1.MongooseGenerateHook, CliMongoose_1.CliMongoose]
    })
], CliPluginMongooseModule);
exports.CliPluginMongooseModule = CliPluginMongooseModule;
//# sourceMappingURL=CliPluginMongooseModule.js.map