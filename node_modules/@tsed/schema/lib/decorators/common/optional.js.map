{"version":3,"file":"optional.js","sourceRoot":"","sources":["../../../src/decorators/common/optional.ts"],"names":[],"mappings":";;;AAAA,qCAAoE;AACpE,iDAA4C;AAE5C;;;;;;;;GAQG;AACH,SAAgB,QAAQ;IACtB,OAAO,2BAAY,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;QAClC,QAAQ,KAAK,CAAC,aAAa,EAAE;YAC3B,KAAK,qBAAc,CAAC,KAAK;gBACvB,KAAK,CAAC,SAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACjC,MAAM;YACR,KAAK,qBAAc,CAAC,IAAI;gBACtB,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;gBACtD,MAAM;YACR;gBACE,MAAM,IAAI,+BAAwB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SACtD;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAbD,4BAaC","sourcesContent":["import {DecoratorTypes, UnsupportedDecoratorType} from \"@tsed/core\";\nimport {JsonEntityFn} from \"./jsonEntityFn\";\n\n/**\n * Add optional annotation on Property or Parameter.\n *\n * @decorator\n * @validation\n * @swagger\n * @schema\n * @input\n */\nexport function Optional() {\n  return JsonEntityFn((store, args) => {\n    switch (store.decoratorType) {\n      case DecoratorTypes.PARAM:\n        store.parameter!.required(false);\n        break;\n      case DecoratorTypes.PROP:\n        store.parentSchema.removeRequired(store.propertyName);\n        break;\n      default:\n        throw new UnsupportedDecoratorType(Optional, args);\n    }\n  });\n}\n"]}