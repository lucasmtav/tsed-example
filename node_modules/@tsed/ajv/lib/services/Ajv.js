"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@tsed/core");
const di_1 = require("@tsed/di");
const ajv_1 = tslib_1.__importDefault(require("ajv"));
const ajv_formats_1 = tslib_1.__importDefault(require("ajv-formats"));
function getHandler(key, service) {
    if (service[key]) {
        return service[key].bind(service);
    }
}
function getKeywordProviders(injector) {
    return injector.getProviders("ajv:keyword");
}
function bindKeywords(injector) {
    return getKeywordProviders(injector).map((provider) => {
        const options = provider.store.get("ajv:keyword", {});
        const service = injector.invoke(provider.token);
        return core_1.cleanObject({
            ...options,
            validate: getHandler("validate", service),
            compile: getHandler("compile", service),
            code: getHandler("code", service),
            macro: getHandler("macro", service)
        });
    });
}
di_1.registerProvider({
    provide: ajv_1.default,
    deps: [di_1.Configuration, di_1.InjectorService],
    scope: di_1.ProviderScope.SINGLETON,
    useFactory(configuration, injector) {
        const { errorFormatter, keywords = [], ...props } = configuration.get("ajv") || {};
        const options = {
            verbose: false,
            coerceTypes: true,
            strict: false,
            keywords: [...keywords, ...bindKeywords(injector)],
            ...props
        };
        const ajv = new ajv_1.default(options);
        ajv_formats_1.default(ajv);
        return ajv;
    }
});
//# sourceMappingURL=Ajv.js.map