"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CliPluginJestModule = void 0;
const tslib_1 = require("tslib");
const cli_core_1 = require("@tsed/cli-core");
const di_1 = require("@tsed/di");
const JestGenerateHook_1 = require("./hooks/JestGenerateHook");
const JestInitHook_1 = require("./hooks/JestInitHook");
let CliPluginJestModule = class CliPluginJestModule {
    install() {
        this.addScripts();
        this.addDevDependencies();
    }
    addScripts() {
        this.packageJson.addScripts({
            test: "yarn test:lint && yarn test:coverage",
            "test:unit": "cross-env NODE_ENV=test jest",
            "test:coverage": "yarn test:unit"
        });
    }
    addDevDependencies() {
        this.packageJson.addDevDependencies({
            "@types/jest": "latest",
            jest: "latest",
            "ts-jest": "latest"
        });
    }
};
tslib_1.__decorate([
    di_1.Inject(),
    tslib_1.__metadata("design:type", cli_core_1.ProjectPackageJson)
], CliPluginJestModule.prototype, "packageJson", void 0);
tslib_1.__decorate([
    cli_core_1.OnAdd("@tsed/cli-plugin-jest"),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", void 0)
], CliPluginJestModule.prototype, "install", null);
CliPluginJestModule = tslib_1.__decorate([
    cli_core_1.Module({
        imports: [JestInitHook_1.JestInitHook, JestGenerateHook_1.JestGenerateHook]
    })
], CliPluginJestModule);
exports.CliPluginJestModule = CliPluginJestModule;
//# sourceMappingURL=CliPluginJestModule.js.map