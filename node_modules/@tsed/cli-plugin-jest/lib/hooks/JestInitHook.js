"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JestInitHook = void 0;
const tslib_1 = require("tslib");
const cli_core_1 = require("@tsed/cli-core");
const templateDir_1 = require("../utils/templateDir");
let JestInitHook = class JestInitHook {
    onInitExec() {
        return [
            {
                title: "Generate files for jest",
                task: (ctx) => {
                    return this.rootRenderer.renderAll(["init/jest.config.js.hbs"], ctx, {
                        templateDir: templateDir_1.TEMPLATE_DIR
                    });
                }
            }
        ];
    }
};
tslib_1.__decorate([
    cli_core_1.Inject(),
    tslib_1.__metadata("design:type", cli_core_1.ProjectPackageJson)
], JestInitHook.prototype, "packageJson", void 0);
tslib_1.__decorate([
    cli_core_1.Inject(),
    tslib_1.__metadata("design:type", cli_core_1.SrcRendererService)
], JestInitHook.prototype, "srcRenderer", void 0);
tslib_1.__decorate([
    cli_core_1.Inject(),
    tslib_1.__metadata("design:type", cli_core_1.RootRendererService)
], JestInitHook.prototype, "rootRenderer", void 0);
tslib_1.__decorate([
    cli_core_1.Inject(),
    tslib_1.__metadata("design:type", cli_core_1.ScriptsRendererService)
], JestInitHook.prototype, "scriptsRenderer", void 0);
tslib_1.__decorate([
    cli_core_1.OnExec("init"),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", void 0)
], JestInitHook.prototype, "onInitExec", null);
JestInitHook = tslib_1.__decorate([
    cli_core_1.Injectable()
], JestInitHook);
exports.JestInitHook = JestInitHook;
//# sourceMappingURL=JestInitHook.js.map