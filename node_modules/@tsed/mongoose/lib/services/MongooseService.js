"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MongooseService = void 0;
const tslib_1 = require("tslib");
const di_1 = require("@tsed/di");
const logger_1 = require("@tsed/logger");
const mongoose_1 = tslib_1.__importDefault(require("mongoose"));
let MongooseService = class MongooseService {
    constructor() {
        this.connections = new Map();
        this.defaultConnection = "default";
    }
    /**
     *
     * @returns {Promise<"mongoose".Connection>}
     */
    async connect(id, url, connectionOptions, isDefault = false) {
        if (this.has(id)) {
            return await this.get(id);
        }
        this.logger.info(`Connect to mongo database: ${id}`);
        this.logger.debug(`Url: ${url}`);
        this.logger.debug(`options: ${JSON.stringify(connectionOptions)}`);
        try {
            const connection = await mongoose_1.default.createConnection(url, connectionOptions);
            this.connections.set(id, connection);
            if (id === "default" || isDefault) {
                this.defaultConnection = id;
            }
            return connection;
        }
        catch (er) {
            /* istanbul ignore next */
            this.logger.error(er);
            /* istanbul ignore next */
            process.exit();
        }
    }
    /**
     *
     * @returns {"mongoose".Connection}
     */
    get(id) {
        return this.connections.get(id || this.defaultConnection);
    }
    /**
     *
     * @param {string} id
     * @returns {boolean}
     */
    has(id) {
        return this.connections.has(id || this.defaultConnection);
    }
    async closeConnections() {
        for (const [id, connection] of this.connections.entries()) {
            await connection.close();
            this.connections.delete(id);
        }
    }
};
tslib_1.__decorate([
    di_1.Inject(),
    tslib_1.__metadata("design:type", logger_1.Logger)
], MongooseService.prototype, "logger", void 0);
MongooseService = tslib_1.__decorate([
    di_1.Service()
], MongooseService);
exports.MongooseService = MongooseService;
//# sourceMappingURL=MongooseService.js.map